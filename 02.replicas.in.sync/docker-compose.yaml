version: '3'
services:
  kafka1:
    container_name: kakfa1
    build:
      dockerfile: Dockerfile.kafka.otel
    environment:
      CLUSTER_ID: q_ArPuYrTNe3KmEBVQ8CAA
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "CONTROLLER://kafka1:9093,LISTENER://kafka1:9092"
      KAFKA_ADVERTISED_LISTENERS: LISTENER://kafka1:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,LISTENER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 5000
      LOG4J_ROOTLOGGER: INFO, stdout, OTLP
      LOG4J_APPENDER_OTLP: io.opentelemetry.exporter.otlp.log.OtlpHttpLogExporter
      LOG4J_APPENDER_OTLP.LAYOUT: io.opentelemetry.exporter.otlp.logs.OtlpJsonLayout
      LOG4J_APPENDER_OTLP_ENDPOINT: http://otel-collector:4318/v1/logs
      OTEL_JMX_TARGET_SYSTEM: kafka-broker
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_SERVICE_NAME: kafka1
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      KAFKA_OPTS: "-javaagent:/tmp/opentelemetry-javaagent.jar"
    depends_on:
      - otel-collector

  kafka2:
    container_name: kakfa2
    build:
      dockerfile: Dockerfile.kafka.otel
    environment:
      CLUSTER_ID: q_ArPuYrTNe3KmEBVQ8CAA
      KAFKA_NODE_ID: 2
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: "CONTROLLER://kafka2:9093,LISTENER://kafka2:9092"
      KAFKA_ADVERTISED_LISTENERS: LISTENER://kafka2:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,LISTENER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 5000
      LOG4J_ROOTLOGGER: INFO, stdout, OTLP
      LOG4J_APPENDER_OTLP: io.opentelemetry.exporter.otlp.log.OtlpHttpLogExporter
      LOG4J_APPENDER_OTLP.LAYOUT: io.opentelemetry.exporter.otlp.logs.OtlpJsonLayout
      LOG4J_APPENDER_OTLP_ENDPOINT: http://otel-collector:4318/v1/logs
      OTEL_JMX_TARGET_SYSTEM: kafka-broker
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_SERVICE_NAME: kafka2
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      KAFKA_OPTS: "-javaagent:/tmp/opentelemetry-javaagent.jar"
    depends_on:
      - otel-collector

  kafka3:
    container_name: kakfa3
    build:
      dockerfile: Dockerfile.kafka.otel
    environment:
      CLUSTER_ID: q_ArPuYrTNe3KmEBVQ8CAA
      KAFKA_NODE_ID: 3
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: "CONTROLLER://kafka3:9093,LISTENER://kafka3:9092"
      KAFKA_ADVERTISED_LISTENERS: LISTENER://kafka3:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,LISTENER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 5000
      LOG4J_ROOTLOGGER: INFO, stdout, OTLP
      LOG4J_APPENDER_OTLP: io.opentelemetry.exporter.otlp.log.OtlpHttpLogExporter
      LOG4J_APPENDER_OTLP.LAYOUT: io.opentelemetry.exporter.otlp.logs.OtlpJsonLayout
      LOG4J_APPENDER_OTLP_ENDPOINT: http://otel-collector:4318/v1/logs
      OTEL_JMX_TARGET_SYSTEM: kafka-broker
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_SERVICE_NAME: kafka3
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      KAFKA_OPTS: "-javaagent:/tmp/opentelemetry-javaagent.jar"
    depends_on:
      - otel-collector

  jupyter:
    container_name: jupyter
    image: jupyter/minimal-notebook
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
  
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension